{"version":3,"sources":["Charts/GaugeChart.js","Containers/Main.js","App.js","reportWebVitals.js","index.js"],"names":["GaugeChart","id","chartName","useEffect","draw","d3","select","remove","margin","value","svg","append","attr","width","innerRadius","radius","outerRadius","startAngle","Math","PI","endAngle","text","style","Main","className","App","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6804cef.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst GaugeChart = ({ id, chartName }) => {\r\n  useEffect(() => {\r\n    draw();\r\n  });\r\n\r\n  let draw = () => {\r\n    d3.select(\"#gauge_chart_\" + id)\r\n      .select(\"svg\")\r\n      .remove();\r\n\r\n    let width = 200;\r\n    let height = 115;\r\n    let radius = 75;\r\n    let margin = { left: 20, right: 20, top: 20, bottom: 20 };\r\n    let value = d3.randomInt(5, 100)();\r\n\r\n    let svg = d3\r\n      .select(\"#gauge_chart_\" + id)\r\n      .append(\"svg\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\")\r\n      .attr(\r\n        \"viewBox\",\r\n        `0 0 ${width + margin.left + margin.right} ${\r\n          height + margin.top + margin.bottom\r\n        }`\r\n      )\r\n      .append(\"g\")\r\n      .attr(\r\n        \"transform\",\r\n        `translate(${width / 2 + margin.left}, ${height / 1.5 + margin.top})`\r\n      );\r\n\r\n    svg\r\n      .append(\"path\")\r\n      .attr(\r\n        \"d\",\r\n        d3\r\n          .arc()\r\n          .innerRadius(radius * 0.7)\r\n          .outerRadius(radius)\r\n          .startAngle(-Math.PI / 2)\r\n          .endAngle(Math.PI / 2)\r\n      )\r\n      .attr(\"fill\", \"#f0f0f0\");\r\n\r\n    svg\r\n      .append(\"path\")\r\n      .attr(\r\n        \"d\",\r\n        d3\r\n          .arc()\r\n          .innerRadius(radius * 0.7)\r\n          .outerRadius(radius)\r\n          .startAngle(-Math.PI / 2)\r\n          .endAngle(-Math.PI / 2 + (value * Math.PI) / 100)\r\n      )\r\n      .attr(\"fill\", '#e15759');\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", 0)\r\n      .text(value + \"%\")\r\n      .style(\"font-size\", 12)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", 15)\r\n      .text(chartName)\r\n      .style(\"font-size\", 12)\r\n      .attr(\"text-anchor\", \"middle\");\r\n  };\r\n\r\n  return <div id={\"gauge_chart_\" + id}></div>;\r\n};\r\n\r\nexport default GaugeChart;\r\n","import React from \"react\";\r\nimport GaugeChart from \"../Charts/GaugeChart\";\r\nimport HorizontalBarChart from \"../Charts/HorizontalBarChart\";\r\nimport LineChart from \"../Charts/LineChart\";\r\nimport \"./styles.scss\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"w-side\">\r\n        <div className=\"side-container\">\r\n          <div>\r\n            <GaugeChart id=\"gauge_1\" chartName=\"Corporate\" />\r\n          </div>\r\n          <div>\r\n            <GaugeChart id=\"gauge_2\" chartName=\"Home Office\" />\r\n          </div>\r\n          <div>\r\n            <GaugeChart id=\"gauge_3\" chartName=\"Small Business\" />\r\n          </div>\r\n          <div>\r\n            <GaugeChart id=\"gauge_4\" chartName=\"Retail\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-content\">\r\n        <div className=\"center-container\">\r\n          <div className=\"legand\">SALES</div>\r\n          <div className=\"content-chart\">\r\n            {/* <HorizontalBarChart id=\"1\" /> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"center-container\">\r\n          <div className=\"legand\">SALES TREND</div>\r\n          <div className=\"content-chart\">\r\n            {/* <LineChart id=\"line_chart_1\" color=\"#ed9230\" /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-content\">\r\n        <div className=\"center-container\">\r\n          <div className=\"legand\">ORDER QUANTITY</div>\r\n          <div className=\"content-chart\">\r\n            {/* <HorizontalBarChart id=\"3\" /> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"center-container\">\r\n          <div className=\"legand\">ORDER QUANTITY TREND</div>\r\n          <div className=\"content-chart\">\r\n            {/* <LineChart id=\"line_chart_2\" color=\"#519c99\" /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-content\">\r\n        <div className=\"center-container\">\r\n          <div className=\"legand\">SHIPPING COST</div>\r\n          <div className=\"content-chart\">\r\n            {/* <HorizontalBarChart id=\"2\" /> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"center-container\">\r\n          <div className=\"legand\">SHIPPING COST TREND</div>\r\n          <div className=\"content-chart\">\r\n            {/* <LineChart id=\"line_chart_3\" color=\"#75a1c8\" /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Main from './Containers/Main'\n\nfunction App() {\n  return <div\n  style={{width: '100%', height:'100vh'}}\n  ><Main /></div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}